---
import "@/styles/style.scss"
import config from "@/data/meta.yml"

export type Meta = {
  title: string
  description: string
  "og:title": string
  "og:description": string
  "og:image": string
}

export type Props = {
  meta?: Partial<Meta>
}

const props = Astro.props

const meta: Readonly<Meta> = {
  ...config.meta,
  ...props.meta,
}

const formats = {
  title: [meta.title, config.siteName].filter(Boolean).join(" - "),
}
const origin = import.meta.env.PUBLIC_ORIGIN || Astro.url.origin
const url = `${origin}${Astro.url.pathname}`

const createItemListElement = () => {
  const paths: Array<string> = Object.values(config.paths)
  const itemListElement = paths.map((path, index: number) => ({
    "@type": "ListItem",
    position: index + 1,
    name: index === 0 ? "top page" : `${path.split("/").join("")} page`,
    item: index === 0 ? `${origin}` : `${origin}${path}`,
  }))

  return itemListElement
}

const schema = JSON.stringify({
  "@context": "https://schema.org/",
  "@type": "BreadcrumbList",
  itemListElement: createItemListElement(),
})
---

<!DOCTYPE html>
<html lang={config.lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
    <meta name="format-detection" content="telephone=no" />
    <meta name="generator" content={Astro.generator} />
    <title>{formats.title}</title>
    <link rel="dns-prefetch" href="https://use.typekit.net" />
    <link rel="preconnect" href="https://use.typekit.net" crossorigin />

    {/* *** common *** ★忘れずに指定 */}
    <meta name="og:url" property="og:url" content={url} />
    <meta name="og:title" property="og:title" content={formats.title} />
    <meta name="og:description" property="og:description" content={meta.description} />
    <meta property="og:type" content="website" />
    <meta name="og:site_name" property="og:site_name" content={formats.title} />
    {meta["og:image"] && <meta name="og:image" property="og:image" content={origin + meta["og:image"]} />}
    <link rel="canonical" href={url} />

    {/* *** Twitter *** ★忘れずに指定 */}
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@dummy" />
    <meta name="twitter:description" content={meta.description} />

    {/* *** favicon *** ★忘れずに指定  */}
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
    <link rel="icon" href="/favicon.ico" sizes="any" /><!-- 32×32 -->
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" /><!-- 180×180 -->

    {/* Font  */}
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      rel="preload"
      as="style"
      href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;500;700&display=swap"
    />
    <link
      rel="preload"
      as="style"
      href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;500;600;700&display=swap"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;500;700&display=swap"
      media="print"
      onload="this.media='all'"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;500;600;700&display=swap"
      media="print"
      onload="this.media='all'"
    />

    <script>
      import "@/js/app"
    </script>

    {/* xml sitemap  */}
    <link rel="sitemap" href="/sitemap-index.xml" />

    {/* Google tag  */}

    {/* jsonld  */}
    <script type="application/ld+json" set:html={schema}></script>
  </head>
  <body>
    <div class="site-wrapper">
      <slot />
    </div>
  </body>
</html>
